<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.library.aladin.book.mapper.BookMapper">

    <!-- 도서 등록 -->
    <insert id="createBook"
            parameterType="com.library.aladin.book.domain.Book"
            useGeneratedKeys="true"
            keyProperty="bookId">
        INSERT INTO aladin.p_book (book_title,
                                   book_author,
                                   book_publisher,
                                   book_desc,
                                   book_price,
                                   book_thumbnail,
                                   category_id)
        VALUES (#{bookTitle},
                #{bookAuthor},
                #{bookPublisher},
                #{bookDesc},
                #{bookPrice},
                #{bookThumbnail},
                #{categoryId})
    </insert>

    <!-- 도서 아이디로 도서 반환 -->
    <select id="findById" parameterType="long" resultType="com.library.aladin.book.domain.Book">
        SELECT book_id,
               book_title,
               book_author,
               book_publisher,
               book_desc,
               book_price,
               book_thumbnail,
               category_id,
               is_deleted
        FROM p_book
        WHERE book_id = #{bookId}
    </select>

    <!-- 도서 전체 반환 (is_deleted = false) -->
    <select id="findAllBooks" resultType="com.library.aladin.book.domain.Book">
        SELECT book_id,
               book_title,
               book_author,
               book_publisher,
               book_desc,
               book_price,
               book_thumbnail,
               category_id,
               is_deleted
        FROM p_book
        WHERE is_deleted = FALSE
        ORDER BY book_id DESC
    </select>

    <!-- 도서 수정 -->
    <update id="updateBook" parameterType="com.library.aladin.book.domain.Book">
        UPDATE p_book
        SET book_title = #{bookTitle},
            book_author = #{bookAuthor},
            book_publisher = #{bookPublisher},
            book_desc = #{bookDesc},
            book_price = #{bookPrice},
            book_thumbnail = #{bookThumbnail},
            category_id = #{categoryId}
        WHERE book_id = #{bookId}
    </update>

    <!-- 도서 삭제 -->
    <update id="deleteBook" parameterType="com.library.aladin.book.domain.Book">
        UPDATE p_book
        SET is_deleted = #{isDeleted}
        WHERE book_id = #{bookId}
    </update>


    <!-- 도서 검색 -->
    <select id="searchBooks" resultType="com.library.aladin.book.domain.Book">
        SELECT b.book_id,
        b.book_title,
        b.book_author,
        b.book_publisher,
        b.book_desc,
        b.book_price,
        b.book_thumbnail,
        b.category_id,
        b.is_deleted
        FROM p_book b
        LEFT JOIN p_book_tags bt ON b.book_id = bt.book_id
        <where>
            b.is_deleted = FALSE
            <if test="keyword != null and keyword != ''">
                AND (b.book_title LIKE CONCAT('%', #{keyword}, '%')
                OR b.book_author LIKE CONCAT('%', #{keyword}, '%')
                OR b.book_publisher LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="categoryId != null">
                AND b.category_id = #{categoryId}
            </if>
            <if test="tagId != null">
                AND bt.tag_id = #{tagId}
            </if>
        </where>
        GROUP BY b.book_id
        ORDER BY b.book_id DESC
    </select>

</mapper>
